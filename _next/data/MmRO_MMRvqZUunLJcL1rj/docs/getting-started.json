{"pageProps":{"docs":{"content":"# Get Started\n\n## Install\n\n```bash\npnpm add @web3-wallet/react @web3-wallet/metamask\n```\n\n## Create a wallet\n\nIf you only need to integrate a single wallet to your dApp:\n\n```ts\nimport { MetaMask } from '@web3-wallet/metamask';\nimport { createWallet } from '@web3-wallet/react';\n\nconst metamask = createWallet(new MetaMask());\n\nconst { autoConnect } = metamask;\n\nexport const App = () => {\n  useEffect(() => {\n    autoConnect();\n  }, []);\n\n  // ....\n};\n```\n\n## Create a current wallet\n\nIt's a common pattern for dApps to support multiple wallets, but typically only one wallet can be active at a time. If your dApp follows this pattern, current wallet is what you need.\n\n```ts\nimport { MetaMask } from '@web3-wallet/metamask';\nimport { DefiWallet } from '@web3-wallet/defiwallet';\nimport { createCurrentWallet } from '@web3-wallet/react';\n\nexport const currentWallet = new createCurrentWallet([\n  new MetaMask(),\n  new DefiWallet(),\n]);\n\nconst {\n  // current wallet only apis\n  useWalletName,\n  switchCurrentWallet,\n  connectAsCurrentWallet,\n  useConnectAsCurrentWallet,\n} = currentWallet;\n```\n\n## A wallet modal example\n\nIn this minimal wallet modal example, we will:\n\n1. Setup MetaMask and DeFi Wallet.\n2. Create a wallet modal in which user can choose either MetaMask or DeFi Wallet to connect to our dApp.\n3. Display the connected wallet account/address.\n4. Check out [examples/react](https://github.com/web3-wallet/web3-wallet/tree/main/packages/examples/react) to see the complete example.\n\n```tsx\n// src/wallet.ts\n// ===========================\nimport { MetaMask } from '@web3-wallet/metamask';\nimport { DefiWallet } from '@web3-wallet/defiwallet';\nimport { type WalletName, createCurrentWallet } from '@web3-wallet/react';\nimport { useEffect } from 'react';\n\nexport const currentWallet = new createCurrentWallet([\n  new MetaMask(),\n  new DefiWallet(),\n]);\n\nexport type WalletConfig = {\n  label: string;\n  // wallet name is the unique id of the wallet\n  name: WalletName;\n  icon: MetaMask.walletIcon;\n};\n\nexport const walletConfigs: WalletConfig[] = [\n  {\n    label: 'MetaMask',\n    name: MetaMask.walletName,\n    icon: MetaMask.walletIcon,\n  },\n  {\n    label: 'DeFi Wallet',\n    name: DefiWallet.walletName,\n    icon: DefiWallet.walletIcon,\n  },\n];\n\nconst getWalletConfig = (name: WalletName): WalletConfig => {\n  return walletConfigs.find((v) => v.name === name)!;\n};\n\n// src/app.tsx\n// ===========================\nimport { currentWallet, getWalletConfig } from './wallet';\n\nconst { autoConnect, useAccount, useWalletName } = currentWallet;\nexport const App = () => {\n  useEffect(() => {\n    // auto connect on app mount\n    autoConnect();\n  }, []);\n\n  const account = useAccount();\n  const walletConfig = getWalletConfig(uesName());\n\n  return (\n    <main id=\"app\">\n      <Button onClick={openWalletModal}>Connect</Button>\n      <WalletModal />\n\n      <p>Your connected to: `${walletConfig.label}`</p>\n      <p>Your wallet account is: `${account}`</p>\n    </main>\n  );\n};\n\n// src/components/WalletModal.tsx\n// ==============================\nimport { currentWallet, walletConfigs } from '../wallet';\n\nexport const WalletModal = () => {\n  return (\n    <div class=\"wallet-modal\">\n      {walletConfigs.map(({ label, name, icon }) => (\n        <div\n          key={name}\n          role=\"button\"\n          onClick={() => {\n            currentWallet.connectAsCurrentWallet(name, 1);\n          }}\n          style={{\n            display: 'flex',\n            alignItem: 'center',\n            gap: 10,\n            cursor: 'point',\n          }}\n        >\n          <img width=\"24px\" height=\"24px\" src={icon} alt={`$label} icon`} />\n          <span>{label}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n```\n","toc":[{"id":"install","indent":1,"content":"Install"},{"id":"create-a-wallet","indent":1,"content":"Create a wallet"},{"id":"create-a-current-wallet","indent":1,"content":"Create a current wallet"},{"id":"a-wallet-modal-example","indent":1,"content":"A wallet modal example"}]},"route":{"label":"Getting Started","slug":["getting-started"],"path":"/home/runner/work/web3-wallet/web3-wallet/docs/getting-started.md"}},"__N_SSG":true}