{"pageProps":{"docs":{"content":"# Connector\n\nA connector is responsible for the details of connecting to a specific wallet application, such as MetaMask or DeFi Wallet. It provides a consistent and standardized interface to the upper layers of your dApp.\n\nConnector is considered low-level entity that usually should not be used directly. Instead, you would typically feed a connector to createWallet or createCurrentWallet to crate an high-level \"Wallet\" or \"CurrentWallet\" interface.\n\n```ts\nconst metaMaskConnector = new MetaMask();\nconst deFiWalletConnector = new DeFiWallet();\nconst metamask = createWallet(metaMaskConnector);\nconst currentWallet = createCurrentWallet([\n  metaMaskConnector,\n  deFiWalletConnector,\n]);\n```\n\n## Implement a Connector for a wallet\n\nIf you need to implement a connector for a specific wallet, you can easily do so by extending the abstract connector class provided by the @web3-wallet/core package. In most cases, implementing a wallet connector can be accomplished with few lines of code.\n\n```ts\nimport type { Provider, ProviderRpcError, WalletName } from '@web3-wallet/core';\nimport { Connector } from '@web3-wallet/core';\n\nimport { icon } from './assets';\n\nconst providerFilter = (p: Provider) => !!p.isMetaMask;\n\nconst _name = 'MetaMask';\nexport const name = _name as WalletName<typeof _name>;\n\nexport class MetaMask extends Connector {\n  public static walletName: WalletName<string> = name;\n  public static walletIcon: string = icon;\n  public name: WalletName<string> = name;\n\n  constructor(options?: Connector['options']) {\n    super({\n      providerFilter,\n      ...options,\n    });\n  }\n}\n```\n\nCheck out more wallet connector Implementation examples [here](https://github.com/web3-wallet/web3-wallet/tree/main/packages/wallets).\n","toc":[{"id":"implement-a-connector-for-a-wallet","indent":1,"content":"Implement a Connector for a wallet"}]},"route":{"label":"Connector","slug":["connector"],"path":"/home/runner/work/web3-wallet/web3-wallet/docs/connector.md"}},"__N_SSG":true}