{"pageProps":{"docs":{"content":"# CurrentWallet\n\nThe CurrentWallet feature enables dApps to support multiple wallets while keeping only one wallet active at a time. This built-in feature eliminates the need to handle the current wallet state in your application code. \n\nWhile typically you only have one active wallet, there are scenarios where you may require multiple active wallets. In such cases, you can create multiple CurrentWallet instances.\n\n## createCurrentWallet\n\n```ts\ntype CreateCurrentWalletOptions = {\n  defaultCurrentWallet?: WalletName;\n  persistKey?: string;\n};\n\ntype CreateCurrentWallet = (\n  connectorsOrWallets: (Connector | Wallet)[],\n  options: CreateCurrentWalletOptions,\n) => CurrentWallet;\n```\n\nThe createCurrentWallet function returns the currentWallet interface.\n\n```ts\nimport { MetaMask } from '@react-web3-wallet/metamask';\nimport { DeFiWallet } from '@react-web3-wallet/defiwallet';\nimport { createCurrentWallet } from '@react-web3-wallet/react';\n\nexport const currentWallet = createCurrentWallet([\n  new MetaMask(),\n  new DeFiWallet(),\n]);\n```\n\n### CreateCurrentWalletOptions.defaultCurrentWallet\n\nThe defaultCurrentWallet option allows you to specify the default wallet for currentWallet. If not provided, the first wallet in the list will be set as the default.\n\n\n### CreateCurrentWalletOptions.persistKey\nThe persistKey option allows you to specify the key used for persisting the currentWallet state in local storage. By default, the key is set to `@react-web3-wallet/currentWallet`.\n\n## CurrentWallet API\n\nMost wallet APIs are available on the currentWallet object. The following additional APIs are specific to currentWallet. See also the [Wallet](https://web3-wallet.github.io/web3-wallet/docs/wallet) documentation for other available APIs.\n\n```ts\nexport interface CurrentWallet extends Wallet {\n  useWalletName: () => WalletName;\n  switchCurrentWallet: (name: WalletName) => void;\n  connectAsCurrentWallet: (\n    name: WalletName,\n    chain?: number | AddEthereumChainParameter,\n  ) => Promise<void>;\n}\n```\n\n### useWalletName\n\n```ts\ninterface CurrentWallet {\n  useWalletName: () => WalletName;\n}\n```\n\nReturns the currentWallet name.\n\n### switchCurrentWallet\n\n```ts\nexport interface CurrentWallet {\n  switchCurrentWallet: (name: WalletName) => void;\n}\n```\n\nSet the specified wallet as the currentWallet.\n\n### connectAsCurrentWallet\n\n```ts\nexport interface CurrentWallet {\n  connectAsCurrentWallet: (\n    name: WalletName,\n    chain?: number | AddEthereumChainParameter,\n  ) => Promise<void>;\n}\n```\n\nThe connectAsCurrentWallet function connects to the specified wallet and sets it as the current wallet if the connection is successful.","toc":[{"id":"createcurrentwallet","indent":1,"content":"createCurrentWallet"},{"id":"createcurrentwalletoptionsdefaultcurrentwallet","indent":2,"content":"CreateCurrentWalletOptions.defaultCurrentWallet"},{"id":"createcurrentwalletoptionspersistkey","indent":2,"content":"CreateCurrentWalletOptions.persistKey"},{"id":"currentwallet-api","indent":1,"content":"CurrentWallet API"},{"id":"usewalletname","indent":2,"content":"useWalletName"},{"id":"switchcurrentwallet","indent":2,"content":"switchCurrentWallet"},{"id":"connectascurrentwallet","indent":2,"content":"connectAsCurrentWallet"}]},"route":{"label":"CurrentWallet","slug":["current-wallet"],"path":"/home/runner/work/web3-wallet/web3-wallet/docs/current-wallet.md"}},"__N_SSG":true}