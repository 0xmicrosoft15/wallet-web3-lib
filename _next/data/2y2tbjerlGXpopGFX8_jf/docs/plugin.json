{"pageProps":{"docs":{"content":"# Plugin\n\nAt it's core, web3-wallet only handle wallet/provider connection. Plugins are modules that are loosely coupled with the web3-wallet core. Plugin let us extend the web3-wallet easily.\n\nA plugin is a function that takes a plugin context as it's input and outputs a plugin api.\n\n```ts\nexport type PluginContext = {\n  wallet: Wallet;\n};\n\nexport type Plugin<TPluginApi = any, TPluginContext = any> = {\n  (context: TPluginContext): TPluginApi;\n  pluginName: PluginName;\n};\n```\n\nPlugins are fed to `createWallet` or `createCurrentWallet`:\n\n```ts\nimport { MetaMask } from '@web3-wallet/metamask';\nimport { DefiWallet } from '@web3-wallet/defiwallet';\nimport { createWallet, createCurrentWallet } from '@web3-wallet/react';\nimport { EnsPlugin } from '@web3-wallet/plugin-ens';\nimport { BalancePlugin } from '@web3-wallet/plugin-balance';\n\nconst plugins = [EnsPlugin.create(), BalancePlugin.create()];\n\nconst wallet = createWallet(new MetaMask(), {\n  plugins,\n});\n\nconst currentWallet = new createCurrentWallet(\n  [new MetaMask(), new DefiWallet()],\n  { plugins },\n);\n\nconst { useEnsName } = wallet.getPlugin<EnsPlugin.Api>(EnsPlugin.pluginName);\n\nconst { data: ensName, ...rest } = useEnsName();\n\nconst { useBalance } = currentWallet.getPlugin<BalancePlugin.Api>(\n  BalancePlugin.pluginName,\n);\n\nconst { data: balance, ...rest } = useBalance();\n```\n\nuseEnsName and useBalance are wrapped with [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery).\n","toc":[]},"route":{"label":"Plugin","slug":["plugin"],"path":"/home/runner/work/web3-wallet/web3-wallet/docs/plugin.md"}},"__N_SSG":true}